{"version":3,"sources":["Components/Item.js","Components/List.js","App.js","reportWebVitals.js","index.js"],"names":["Buttons","styled","button","props","theme","buttonColor","Item","text","quantity","listObject","listObjects","setListObjects","className","picked","onClick","map","item","id","icon","filter","List","editedList","library","add","faPlus","faTrash","faCheck","Container","div","GlobalStyles","createGlobalStyle","body","Input","input","inputColor","Select","select","lightTheme","darkTheme","App","useState","inputText","setInputText","inputQuantity","setInputQuantity","status","setStatus","setEditedList","setTheme","useEffect","editedListHandler","type","value","placeholder","onChange","e","target","min","preventDefault","removed","Math","random","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61501232.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Buttons = styled.button`\r\n  color: ${props => props.theme.buttonColor};\r\n`;\r\n\r\nfunction Item({text, quantity, listObject, listObjects, setListObjects}) {\r\n\r\n    //handle removed items\r\n    const removeHandler = () => {\r\n        setListObjects(listObjects.filter((item) => item.id !== listObject.id));\r\n            \r\n    };\r\n\r\n    //handle picked items\r\n    const pickedHandler = () => {\r\n        setListObjects(listObjects.map((item) => {\r\n            if(item.id === listObject.id) {\r\n                return {\r\n                    ...item, picked: !item.picked\r\n                };\r\n            }\r\n            return item;\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <div className = \"to-pick\">\r\n            <li className={`item-to-pick ${listObject.picked ? \"picked\": ''}`}>\r\n                {quantity} {text}\r\n            </li>\r\n            <Buttons className=\"picked-button\" onClick={pickedHandler}>\r\n                <i>\r\n                    <FontAwesomeIcon className=\"faicons-check\" icon='check'/>\r\n                </i>\r\n            </Buttons>\r\n            <Buttons className=\"remove-button\" onClick={removeHandler}>\r\n                <i>\r\n                    <FontAwesomeIcon className=\"faicons-trash\" icon='trash'/>\r\n                </i>\r\n            </Buttons>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Item;","import React from \"react\";\r\nimport '../App.css';\r\nimport Item from './Item';\r\n\r\nconst List = ({listObjects, setListObjects, editedList}) => {\r\n\r\n\r\n    return (\r\n        <div className=\"item-box\">\r\n            <ul className=\"item-list\">\r\n                {editedList.map(listObject => (\r\n                <Item key = {listObject.id}\r\n                    text = {listObject.text}\r\n                    quantity = {listObject.quantity}\r\n                    listObject = {listObject}\r\n                    listObjects={listObjects}\r\n                    setListObjects = {setListObjects}/>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default List;\r\n","import { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport List from \"./Components/List\";\r\nimport {library} from '@fortawesome/fontawesome-svg-core';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport {faTrash} from '@fortawesome/free-solid-svg-icons';\r\nimport {faCheck} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport styled, {ThemeProvider} from 'styled-components';\r\nimport {createGlobalStyle} from 'styled-components';\r\n\r\n\r\n//using button designs from fontAwesome\r\n//adding buttons to the library to be used\r\nlibrary.add(faPlus);\r\nlibrary.add(faTrash);\r\nlibrary.add(faCheck);\r\n\r\n\r\n//Styled container\r\nconst Container = styled.div`\r\n  text-align: center;\r\n  justify-content: center;\r\n`;\r\n\r\n\r\n//Global style to switch attributes features\r\nconst GlobalStyles = createGlobalStyle`\r\nbody {\r\n  background-color: ${props => props.theme.body};\r\n  color: ${props => props.theme.text};\r\n  transition: 1s;\r\n}\r\n`;\r\n\r\n//Styled buttons\r\nconst Buttons = styled.button`\r\n  color: ${props => props.theme.buttonColor};\r\n  transition: 1s;\r\n`;\r\n\r\n//Styled input fields\r\nconst Input = styled.input`\r\n  background: ${props => props.theme.inputColor};\r\n`;\r\n//Styled option fields\r\nconst Select = styled.select`\r\n  background: ${props => props.theme.inputColor};\r\n`;\r\n\r\n//toggle characteristics for dark and light mode\r\nconst lightTheme = {\r\n  body: 'rgb(243, 217, 217)',\r\n  text: 'rgb(0, 0, 0)',\r\n  inputColor: 'white',\r\n  buttonColor: 'rgb(0, 0, 0)'\r\n};\r\n\r\nconst darkTheme = {\r\n  body: \"#121212\",\r\n  text: 'rgb(243, 217, 217)',\r\n  inputColor: 'rgb(243, 217, 217)',\r\n  buttonColor: 'rgb(243, 217, 217)'\r\n}\r\n\r\n\r\nfunction App() {\r\n\r\n  //initialize states\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [inputQuantity, setInputQuantity] = useState();\r\n  const [listObjects, setListObjects] = useState([]);\r\n  const [status, setStatus] = useState(\"items\");\r\n  const [editedList, setEditedList] = useState([]);\r\n  const [theme, setTheme] = useState(\"light\");\r\n\r\n  //useEffect to update everytime status is changed\r\n  useEffect (() => {\r\n    editedListHandler();\r\n  }, [listObjects, status]);\r\n\r\n\r\n  //adress new item input\r\n  const newItemHandler = (e) => {\r\n      setInputText(e.target.value);\r\n  }\r\n\r\n  //adress the quantity\r\n  const itemQuantityHandler = (e) => {\r\n      setInputQuantity(e.target.value);\r\n  }\r\n\r\n  //Add the new entry to the list\r\n  const addItemHandler = (e) => {\r\n    e.preventDefault();\r\n    setListObjects([...listObjects,\r\n    { text: inputText,\r\n      quantity: inputQuantity,\r\n      picked: false,\r\n      removed: false,\r\n      id: Math.random() * 1000\r\n    }]);\r\n    setInputText('');\r\n    setInputQuantity(1);\r\n  \r\n  };\r\n\r\n  //filter the list based on picked or not.\r\n  const editedListHandler = () => {\r\n    switch(status) {\r\n      case \"picked\":\r\n        setEditedList(listObjects.filter(listObject => listObject.picked === true));\r\n        break;\r\n      case \"unpicked\":\r\n        setEditedList(listObjects.filter(listObject => listObject.picked === false));\r\n        break;  \r\n      default:\r\n        setEditedList(listObjects);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const statusHandler = (e) => {\r\n    console.log(e.target.value);\r\n    setStatus(e.target.value);\r\n  };\r\n\r\n  const toggleHandler =() => {\r\n    theme === 'light' ? setTheme('dark') : setTheme('light');\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme === \"light\"? lightTheme: darkTheme}>\r\n      <GlobalStyles />\r\n      <Container>\r\n          <header>\r\n            <h1>.list</h1>\r\n          </header>\r\n          <form>\r\n            <Input className = \"input-text-box\" type = \"text\" value={inputText} placeholder = \"item\" onChange={newItemHandler}/>\r\n            <Input className = \"quantity-box\" type = \"number\" value = {inputQuantity} placeholder = \"1\" min=\"1\" onChange={itemQuantityHandler} />\r\n            <Buttons className = \"add-button\" type = \"submit\" onClick={addItemHandler}>\r\n              <i>\r\n                <FontAwesomeIcon className=\"faicons-plus\" icon='plus' />\r\n              </i>\r\n            </Buttons>     \r\n            \r\n            <div className=\"option-select\">\r\n              <Select className=\"list-options\" onChange={statusHandler}>\r\n                <option value=\"items\">items</option>\r\n                <option value=\"picked\">picked items</option>\r\n                <option value=\"unpicked\">unpicked items</option>\r\n              </Select>\r\n            </div>\r\n            <div>\r\n            <label className=\"switch\">\r\n              <input type=\"checkbox\" onClick={toggleHandler} />\r\n              <span className=\"toggler\"/>\r\n            </label>\r\n            </div>\r\n          </form>\r\n          <List listObjects={listObjects}\r\n                setListObjects={setListObjects}\r\n                editedList={editedList}\r\n                />\r\n      </Container>\r\n    </ThemeProvider> \r\n  );\r\n};\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}